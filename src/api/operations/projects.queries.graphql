query GetProjectsForSelect {
  projects(sortOrder: ORGANIZATION_AND_NAME) {
    ...ProjectFields
  }
}

query GetOrganizationsAndProjects {
  organizations(sortOrder: NAME) {
    ...OrganizationFields
    projects {
      ...ProjectAllFields
    }
  }
}

query GetProject($id: ID!) {
  project(id: $id) {
    ...ProjectAllFields
  }
}

query GetOrganization($id: ID!) {
  organization(id: $id) {
    ...OrganizationAllFields
    projects {
      ...ProjectAllFields
    }
  }
}

query GetOrganizationsForSelect {
  organizations(sortOrder: NAME) {
    ...OrganizationFields
  }
}

mutation CreateProject($input: CreateProjectInput!) {
  createProject(input: $input) {
    clientMutationId
    project {
      ...ProjectAllFields
    }
    errors {
      ...ValidationErrorFields
    }
  }
}

mutation UpdateProject($input: UpdateProjectInput!) {
  updateProject(input: $input) {
    clientMutationId
    project {
      ...ProjectAllFields
    }
    errors {
      ...ValidationErrorFields
    }
  }
}

mutation CreateOrganization($input: CreateOrganizationInput!) {
  createOrganization(input: $input) {
    clientMutationId
    organization {
      ...OrganizationAllFieldsAndProjects
    }
    errors {
      ...ValidationErrorFields
    }
  }
}

mutation UpdateOrganization($input: UpdateOrganizationInput!) {
  updateOrganization(input: $input) {
    clientMutationId
    organization {
      ...OrganizationAllFieldsAndProjects
    }
    errors {
      ...ValidationErrorFields
    }
  }
}

query GetProjectInventories($id: ID!, $limit: Int = 10, $offset: Int = 0) {
  project(id: $id) {
    id
    inventories(limit: $limit, offset: $offset, sortOrder: START_DATE) {
      offset
      limit
      nodesCount
      nodes {
        ...InventoryFields
      }
    }
  }
}

query GetProjectProjectCocs($id: ID!, $limit: Int = 10, $offset: Int = 0) {
  project(id: $id) {
    id
    projectCocs(limit: $limit, offset: $offset) {
      offset
      limit
      nodesCount
      nodes {
        ...ProjectCocFields
      }
    }
  }
}

query GetProjectFunders($id: ID!, $limit: Int = 10, $offset: Int = 0) {
  project(id: $id) {
    id
    funders(limit: $limit, offset: $offset) {
      offset
      limit
      nodesCount
      nodes {
        ...FunderFields
      }
    }
  }
}

mutation UpdateInventory($input: UpdateInventoryInput!) {
  updateInventory(input: $input) {
    clientMutationId
    inventory {
      ...InventoryFields
    }
    errors {
      ...ValidationErrorFields
    }
  }
}

mutation DeleteInventory($input: DeleteInventoryInput!) {
  deleteInventory(input: $input) {
    clientMutationId
    inventory {
      id
    }
    errors {
      ...ValidationErrorFields
    }
  }
}
