query GetAssessment($id: ID!) {
  assessment(id: $id) {
    ...AssessmentWithDefinitionAndValues
  }
}

query GetPickList($pickListType: PickListType!, $relationId: ID) {
  pickList(pickListType: $pickListType, relationId: $relationId) {
    ...PickListOptionFields
  }
}

query GetEnrollmentAssessments(
  $id: ID!
  $limit: Int = 10
  $offset: Int = 0
  $roles: [AssessmentRole!]
  $inProgress: Boolean
) {
  enrollment(id: $id) {
    id
    assessments(
      limit: $limit
      offset: $offset
      roles: $roles
      inProgress: $inProgress
      sortOrder: ASSESSMENT_DATE
    ) {
      offset
      limit
      nodesCount
      nodes {
        ...AssessmentFields
      }
    }
  }
}

query GetFormDefinitionByIdentifier($identifier: String!) {
  formDefinition(identifier: $identifier) {
    ...FormDefinitionWithJson
  }
}

query GetFormDefinition($enrollmentId: ID!, $assessmentRole: AssessmentRole!) {
  getFormDefinition(
    enrollmentId: $enrollmentId
    assessmentRole: $assessmentRole
  ) {
    ...FormDefinitionWithJson
  }
}

mutation SaveAssessment(
  $assessmentId: ID
  $enrollmentId: ID
  $formDefinitionId: ID
  $values: JsonObject!
  $assessmentDate: String
) {
  saveAssessment(
    input: {
      assessmentId: $assessmentId
      enrollmentId: $enrollmentId
      formDefinitionId: $formDefinitionId
      assessmentDate: $assessmentDate
      values: $values
    }
  ) {
    assessment {
      ...AssessmentWithDefinitionAndValues
    }
    errors {
      ...ValidationErrorFields
    }
  }
}

mutation SubmitAssessment(
  $assessmentId: ID
  $enrollmentId: ID
  $formDefinitionId: ID
  $values: JsonObject!
  $hudValues: JsonObject
  $assessmentDate: String
) {
  submitAssessment(
    input: {
      assessmentId: $assessmentId
      enrollmentId: $enrollmentId
      formDefinitionId: $formDefinitionId
      assessmentDate: $assessmentDate
      values: $values
      hudValues: $hudValues
    }
  ) {
    assessment {
      ...AssessmentWithDefinitionAndValues
    }
    errors {
      ...ValidationErrorFields
    }
  }
}

query GetAssessmentsForPopulation(
  $id: ID!
  $limit: Int = 10
  $offset: Int = 0
  $roles: [AssessmentRole!]
  $inProgress: Boolean
) {
  client(id: $id) {
    id
    assessments(
      limit: $limit
      offset: $offset
      roles: $roles
      inProgress: $inProgress
      sortOrder: ASSESSMENT_DATE
    ) {
      offset
      limit
      nodesCount
      nodes {
        ...AssessmentWithValues
      }
    }
  }
}

# query GetHouseholdAssessments($id: ID!, $role: AssessmentRole!) {
#   enrollment(id: $id) {
#     id
#     household {
#       id
#       householdClients {
#         ...HouseholdClientFields
#         enrollment {
#           id
#           entryDate
#           exitDate
#           inProgress
#           assessments(roles: [$role], limit: 1) {
#             nodes {
#               ...AssessmentFields
#               enrollment {
#                 id
#                 ...EnrollmentFields
#               }
#             }
#           }
#         }
#       }
#     }
#   }
# }
