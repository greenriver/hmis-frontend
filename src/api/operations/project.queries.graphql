query GetProjects(
  $limit: Int = 10
  $offset: Int = 0
  $filters: ProjectFilterOptions
  $sortOrder: ProjectSortOption
) {
  projects(
    limit: $limit
    offset: $offset
    filters: $filters
    sortOrder: $sortOrder
  ) {
    offset
    limit
    nodesCount
    nodes {
      id
      ...ProjectNameAndType
      ...ProjectOperatingPeriod
      organization {
        ...OrganizationNameFields
      }
    }
  }
}

query GetProject($id: ID!) {
  project(id: $id) {
    ...ProjectAllFields
  }
}

query GetProjectPermissions($id: ID!) {
  project(id: $id) {
    id
    access {
      ...ProjectAccessFields
    }
  }
}

query GetProjectEnrollments(
  $id: ID!
  $filters: EnrollmentsForProjectFilterOptions
  $sortOrder: EnrollmentSortOption
  $limit: Int = 10
  $offset: Int = 0
  $includeCls: Boolean = false
) {
  project(id: $id) {
    id
    enrollments(
      limit: $limit
      offset: $offset
      sortOrder: $sortOrder
      filters: $filters
    ) {
      offset
      limit
      nodesCount
      nodes {
        ...ProjectEnrollmentQueryEnrollmentFields
      }
    }
  }
}

query GetProjectHouseholds(
  $id: ID!
  $filters: HouseholdFilterOptions
  $sortOrder: HouseholdSortOption
  $limit: Int = 10
  $offset: Int = 0
) {
  project(id: $id) {
    id
    households(
      limit: $limit
      offset: $offset
      sortOrder: $sortOrder
      filters: $filters
    ) {
      offset
      limit
      nodesCount
      nodes {
        ...ProjectEnrollmentsHouseholdFields
      }
    }
  }
}

query GetProjectServices(
  $id: ID!
  $filters: ServicesForProjectFilterOptions
  $sortOrder: ServiceSortOption
  $limit: Int = 10
  $offset: Int = 0
) {
  project(id: $id) {
    id
    services(
      limit: $limit
      offset: $offset
      sortOrder: $sortOrder
      filters: $filters
    ) {
      offset
      limit
      nodesCount
      nodes {
        ...ServiceFields
        enrollment {
          id
          entryDate
          exitDate
          client {
            ...ClientNameDobVet
          }
        }
      }
    }
  }
}

mutation DeleteProject($input: DeleteProjectInput!) {
  deleteProject(input: $input) {
    clientMutationId
    project {
      id
    }
    errors {
      ...ValidationErrorFields
    }
  }
}

query GetFunder($id: ID!) {
  funder(id: $id) {
    ...FunderFields
  }
}

query GetInventory($id: ID!) {
  inventory(id: $id) {
    ...InventoryFields
  }
}

query GetProjectCoc($id: ID!) {
  projectCoc(id: $id) {
    ...ProjectCocFields
  }
}

query GetProjectInventories($id: ID!, $limit: Int = 10, $offset: Int = 0) {
  project(id: $id) {
    id
    inventories(limit: $limit, offset: $offset, sortOrder: START_DATE) {
      offset
      limit
      nodesCount
      nodes {
        ...InventoryFields
      }
    }
  }
}

query GetProjectReferralRequests($id: ID!, $limit: Int = 10, $offset: Int = 0) {
  project(id: $id) {
    id
    referralRequests(limit: $limit, offset: $offset) {
      offset
      limit
      nodesCount
      nodes {
        ...ReferralRequestFields
      }
    }
  }
}

query GetProjectReferralPostings($id: ID!, $limit: Int = 10, $offset: Int = 0) {
  project(id: $id) {
    id
    incomingReferralPostings(limit: $limit, offset: $offset) {
      offset
      limit
      nodesCount
      nodes {
        ...ReferralPostingFields
      }
    }
  }
}

query GetProjectOutgoingReferralPostings(
  $id: ID!
  $limit: Int = 10
  $offset: Int = 0
) {
  project(id: $id) {
    id
    outgoingReferralPostings(limit: $limit, offset: $offset) {
      offset
      limit
      nodesCount
      nodes {
        ...ReferralPostingFields
        hohEnrollment {
          id
          client {
            id
          }
        }
      }
    }
  }
}

query GetProjectProjectCocs($id: ID!, $limit: Int = 10, $offset: Int = 0) {
  project(id: $id) {
    id
    projectCocs(limit: $limit, offset: $offset) {
      offset
      limit
      nodesCount
      nodes {
        ...ProjectCocFields
      }
    }
  }
}

query GetProjectFunders($id: ID!, $limit: Int = 10, $offset: Int = 0) {
  project(id: $id) {
    id
    funders(limit: $limit, offset: $offset) {
      offset
      limit
      nodesCount
      nodes {
        ...FunderFields
      }
    }
  }
}

query GetProjectCeParticipations($id: ID!, $limit: Int = 10, $offset: Int = 0) {
  project(id: $id) {
    id
    ceParticipations(limit: $limit, offset: $offset) {
      offset
      limit
      nodesCount
      nodes {
        ...CeParticipationFields
      }
    }
  }
}

query GetProjectHmisParticipations(
  $id: ID!
  $limit: Int = 10
  $offset: Int = 0
) {
  project(id: $id) {
    id
    hmisParticipations(limit: $limit, offset: $offset) {
      offset
      limit
      nodesCount
      nodes {
        ...HmisParticipationFields
      }
    }
  }
}

mutation DeleteInventory($input: DeleteInventoryInput!) {
  deleteInventory(input: $input) {
    clientMutationId
    inventory {
      id
    }
    errors {
      ...ValidationErrorFields
    }
  }
}

mutation DeleteFunder($input: DeleteFunderInput!) {
  deleteFunder(input: $input) {
    clientMutationId
    funder {
      id
    }
    errors {
      ...ValidationErrorFields
    }
  }
}

mutation DeleteProjectCoc($input: DeleteProjectCocInput!) {
  deleteProjectCoc(input: $input) {
    clientMutationId
    projectCoc {
      id
    }
    errors {
      ...ValidationErrorFields
    }
  }
}

mutation DeleteHmisParticipation($id: ID!) {
  deleteHmisParticipation(input: { id: $id }) {
    hmisParticipation {
      id
    }
    errors {
      ...ValidationErrorFields
    }
  }
}

mutation DeleteCeParticipation($id: ID!) {
  deleteCeParticipation(input: { id: $id }) {
    ceParticipation {
      id
    }
    errors {
      ...ValidationErrorFields
    }
  }
}
