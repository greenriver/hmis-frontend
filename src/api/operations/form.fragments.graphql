fragment ValidationErrorFields on ValidationError {
  type
  attribute
  readableAttribute
  message
  fullMessage
  severity
  id
  recordId
  linkId
  section
  data
}

fragment PickListOptionFields on PickListOption {
  code
  label
  secondaryLabel
  groupLabel
  groupCode
  initialSelected
  helperText
  numericValue
}

fragment EnableWhenFields on EnableWhen {
  question
  localConstant
  operator
  answerCode
  answerCodes
  answerNumber
  answerBoolean
  answerGroupCode
  answerDate
  compareQuestion
}
fragment ItemFields on FormItem {
  __typename
  linkId
  type
  component
  prefix
  text
  briefText
  readonlyText
  helperText
  required
  warnIfEmpty
  hidden
  readOnly
  repeats
  mapping {
    recordType
    fieldName
    customFieldKey
  }
  pickListReference
  size
  assessmentDate
  prefill
  bounds {
    id
    severity
    type
    question
    valueNumber
    valueDate
    valueLocalConstant
    offset
  }
  pickListOptions {
    ...PickListOptionFields
  }
  initial {
    valueCode
    valueBoolean
    valueNumber
    valueLocalConstant
    initialBehavior
  }
  dataCollectedAbout
  disabledDisplay
  enableBehavior
  enableWhen {
    ...EnableWhenFields
  }
  autofillValues {
    valueCode
    valueQuestion
    valueBoolean
    valueNumber
    sumQuestions
    formula
    autofillBehavior
    autofillReadonly
    autofillWhen {
      ...EnableWhenFields
    }
  }
  rule
  customRule
}

# GQL doesnt allow recursive fragments, so we have a max nesting level here
fragment FormDefinitionJsonFields on FormDefinitionJson {
  item {
    ...ItemFields
    item {
      ...ItemFields
      item {
        ...ItemFields
        item {
          ...ItemFields
          item {
            ...ItemFields
          }
        }
      }
    }
  }
}

fragment FormDefinitionMetadata on FormDefinition {
  id
  role
  title
  cacheKey
  identifier
  status
  updatedBy {
    name
  }
  dateUpdated
}

# FormDefinition to use for rendering a dynamic form
fragment FormDefinitionFields on FormDefinition {
  ...FormDefinitionMetadata
  definition {
    ...FormDefinitionJsonFields
  }
}

# Contains raw JSON definition used for JSON editor
fragment FormDefinitionFieldsForJsonEditor on FormDefinition {
  ...FormDefinitionFields
  status
  rawDefinition
}

# Leaving this fragment as a separate fragment because it may need to include additional
# fields like form rules that are not used for form rendering
fragment FormDefinitionFieldsForEditor on FormDefinition {
  ...FormDefinitionFields
  version
}

fragment FormIdentifierDetails on FormIdentifier {
  id
  identifier
  displayVersion {
    ...FormDefinitionMetadata
  }
  draftVersion {
    ...FormDefinitionMetadata
  }
}
